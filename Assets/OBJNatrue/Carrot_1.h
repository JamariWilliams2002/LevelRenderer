// "Carrot_1.h" generated by "Obj2Header.exe" [Version 1.9d] Author: L.Norri Fullsail University.
// Data is converted to left-handed coordinate system and UV data is V flipped for Direct3D/Vulkan.
// The companion file "Carrot_1.h2b" is a binary dump of this format(-padding) for more flexibility.
// Loading *.h2b: read version, sizes, handle strings(max len 260) by reading until null-terminated.
/***********************/
/*  Generator version  */
/***********************/
#ifndef _Carrot_1_version_
const char Carrot_1_version[4] = { '0','1','9','d' };
#define _Carrot_1_version_
#endif
/************************************************/
/*  This section contains the model's size data */
/************************************************/
#ifndef _Carrot_1_vertexcount_
const unsigned Carrot_1_vertexcount = 180;
#define _Carrot_1_vertexcount_
#endif
#ifndef _Carrot_1_indexcount_
const unsigned Carrot_1_indexcount = 264;
#define _Carrot_1_indexcount_
#endif
#ifndef _Carrot_1_materialcount_
const unsigned Carrot_1_materialcount = 1; // can be used for batched draws
#define _Carrot_1_materialcount_
#endif
#ifndef _Carrot_1_meshcount_
const unsigned Carrot_1_meshcount = 1;
#define _Carrot_1_meshcount_
#endif
/************************************************/
/*  This section contains the raw data to load  */
/************************************************/
#ifndef __OBJ_VEC3__
typedef struct _OBJ_VEC3_
{
	float x,y,z; // 3D Coordinate.
}OBJ_VEC3;
#define __OBJ_VEC3__
#endif
#ifndef __OBJ_VERT__
typedef struct _OBJ_VERT_
{
	OBJ_VEC3 pos; // Left-handed +Z forward coordinate w not provided, assumed to be 1.
	OBJ_VEC3 uvw; // D3D/Vulkan style top left 0,0 coordinate.
	OBJ_VEC3 nrm; // Provided direct from obj file, may or may not be normalized.
}OBJ_VERT;
#define __OBJ_VERT__
#endif
#ifndef _Carrot_1_vertices_
// Raw Vertex Data follows: Positions, Texture Coordinates and Normals.
const OBJ_VERT Carrot_1_vertices[180] =
{
	{	{ -0.030775f, 0.167750f, -0.030866f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.940400f, -0.231200f, -0.249600f }	},
	{	{ -0.014187f, 0.076670f, -0.009037f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.940400f, -0.231200f, -0.249600f }	},
	{	{ -0.017566f, 0.076705f, 0.003697f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.940400f, -0.231200f, -0.249600f }	},
	{	{ -0.043641f, 0.167911f, 0.017432f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.940400f, -0.231200f, -0.249600f }	},
	{	{ -0.083136f, 0.242820f, 0.013938f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.857200f, -0.462100f, -0.227500f }	},
	{	{ -0.066519f, 0.242529f, -0.047947f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.857200f, -0.462100f, -0.227500f }	},
	{	{ -0.030775f, 0.167750f, -0.030866f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.857200f, -0.462100f, -0.227500f }	},
	{	{ -0.043641f, 0.167911f, 0.017432f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.857200f, -0.462100f, -0.227500f }	},
	{	{ -0.117233f, 0.279651f, 0.007558f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.702800f, -0.687600f, -0.182300f }	},
	{	{ -0.106754f, 0.281605f, -0.041300f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.702800f, -0.687600f, -0.182300f }	},
	{	{ -0.066519f, 0.242529f, -0.047947f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.702800f, -0.687600f, -0.182300f }	},
	{	{ -0.083136f, 0.242820f, 0.013938f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.702800f, -0.687600f, -0.182300f }	},
	{	{ -0.176504f, 0.319417f, -0.016284f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.511100f, -0.847300f, -0.144400f }	},
	{	{ -0.173304f, 0.319760f, -0.029316f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.511100f, -0.847300f, -0.144400f }	},
	{	{ -0.106754f, 0.281605f, -0.041300f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.511100f, -0.847300f, -0.144400f }	},
	{	{ -0.117233f, 0.279651f, 0.007558f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.511100f, -0.847300f, -0.144400f }	},
	{	{ -0.176504f, 0.319417f, -0.016284f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.378500f, -0.918100f, -0.117100f }	},
	{	{ -0.189016f, 0.325679f, -0.024934f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.378500f, -0.918100f, -0.117100f }	},
	{	{ -0.173304f, 0.319760f, -0.029316f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.378500f, -0.918100f, -0.117100f }	},
	{	{ -0.014222f, 0.002127f, -0.009028f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.966600f, 0.000400f, -0.256300f }	},
	{	{ -0.017596f, 0.002127f, 0.003705f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.966600f, 0.000400f, -0.256300f }	},
	{	{ -0.017566f, 0.076705f, 0.003697f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.966600f, 0.000400f, -0.256300f }	},
	{	{ -0.014187f, 0.076670f, -0.009037f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.966600f, 0.000400f, -0.256300f }	},
	{	{ -0.007525f, 0.187582f, -0.030243f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.966100f, 0.216600f, 0.140400f }	},
	{	{ -0.019401f, 0.094035f, -0.007462f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.966100f, 0.216600f, 0.140400f }	},
	{	{ -0.023357f, 0.094035f, 0.005103f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.966100f, 0.216600f, 0.140400f }	},
	{	{ 0.005278f, 0.187600f, 0.018037f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.966100f, 0.216600f, 0.140400f }	},
	{	{ 0.045838f, 0.264398f, 0.014557f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.856900f, 0.462700f, 0.227400f }	},
	{	{ 0.029327f, 0.264215f, -0.047228f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.856900f, 0.462700f, 0.227400f }	},
	{	{ -0.007525f, 0.187582f, -0.030243f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.856900f, 0.462700f, 0.227400f }	},
	{	{ 0.005278f, 0.187600f, 0.018037f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.856900f, 0.462700f, 0.227400f }	},
	{	{ 0.081947f, 0.303343f, 0.008127f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.703000f, 0.687500f, 0.182300f }	},
	{	{ 0.071661f, 0.305400f, -0.040492f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.703000f, 0.687500f, 0.182300f }	},
	{	{ 0.029327f, 0.264215f, -0.047228f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.703000f, 0.687500f, 0.182300f }	},
	{	{ 0.045838f, 0.264398f, 0.014557f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.703000f, 0.687500f, 0.182300f }	},
	{	{ 0.144046f, 0.345004f, -0.015659f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.512700f, 0.846300f, 0.144800f }	},
	{	{ 0.141180f, 0.345485f, -0.028463f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.512700f, 0.846300f, 0.144800f }	},
	{	{ 0.071661f, 0.305400f, -0.040492f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.512700f, 0.846300f, 0.144800f }	},
	{	{ 0.081947f, 0.303343f, 0.008127f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.512700f, 0.846300f, 0.144800f }	},
	{	{ 0.144046f, 0.345004f, -0.015659f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.384400f, 0.915300f, 0.120500f }	},
	{	{ 0.158831f, 0.352340f, -0.024217f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.384400f, 0.915300f, 0.120500f }	},
	{	{ 0.141180f, 0.345485f, -0.028463f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.384400f, 0.915300f, 0.120500f }	},
	{	{ -0.006456f, 0.077144f, 0.000799f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.940400f, 0.231400f, 0.249200f }	},
	{	{ -0.003081f, 0.077144f, -0.011934f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.940400f, 0.231400f, 0.249200f }	},
	{	{ -0.019967f, 0.169207f, -0.033684f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.940400f, 0.231400f, 0.249200f }	},
	{	{ -0.032763f, 0.169207f, 0.014595f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.940400f, 0.231400f, 0.249200f }	},
	{	{ -0.019967f, 0.169207f, -0.033684f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.857100f, 0.462400f, 0.227200f }	},
	{	{ -0.056402f, 0.245044f, -0.050590f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.857100f, 0.462400f, 0.227200f }	},
	{	{ -0.072788f, 0.245044f, 0.011237f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.857100f, 0.462400f, 0.227200f }	},
	{	{ -0.032763f, 0.169207f, 0.014595f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.857100f, 0.462400f, 0.227200f }	},
	{	{ -0.056402f, 0.245044f, -0.050590f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.702900f, 0.687600f, 0.182100f }	},
	{	{ -0.097922f, 0.285262f, -0.043596f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.702900f, 0.687600f, 0.182100f }	},
	{	{ -0.107889f, 0.282919f, 0.005120f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.702900f, 0.687600f, 0.182100f }	},
	{	{ -0.072788f, 0.245044f, 0.011237f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.702900f, 0.687600f, 0.182100f }	},
	{	{ -0.097922f, 0.285262f, -0.043596f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.511800f, 0.846700f, 0.145400f }	},
	{	{ -0.166104f, 0.324336f, -0.031159f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.511800f, 0.846700f, 0.145400f }	},
	{	{ -0.168738f, 0.323717f, -0.018285f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.511800f, 0.846700f, 0.145400f }	},
	{	{ -0.107889f, 0.282919f, 0.005120f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.511800f, 0.846700f, 0.145400f }	},
	{	{ -0.168738f, 0.323717f, -0.018285f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.380900f, 0.916500f, 0.122000f }	},
	{	{ -0.166104f, 0.324336f, -0.031159f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.380900f, 0.916500f, 0.122000f }	},
	{	{ -0.182598f, 0.330580f, -0.026561f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.380900f, 0.916500f, 0.122000f }	},
	{	{ -0.006456f, 0.077144f, 0.000799f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.966600f, 0.000000f, 0.256200f }	},
	{	{ -0.006456f, 0.002127f, 0.000799f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.966600f, 0.000000f, 0.256200f }	},
	{	{ -0.003081f, 0.002127f, -0.011934f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.966600f, 0.000000f, 0.256200f }	},
	{	{ -0.003081f, 0.077144f, -0.011934f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.966600f, 0.000000f, 0.256200f }	},
	{	{ -0.012251f, 0.093350f, 0.001685f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.966200f, -0.216100f, -0.140400f }	},
	{	{ -0.008296f, 0.093350f, -0.010879f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.966200f, -0.216100f, -0.140400f }	},
	{	{ 0.003422f, 0.186398f, -0.033684f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.966200f, -0.216100f, -0.140400f }	},
	{	{ 0.016218f, 0.186398f, 0.014595f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.966200f, -0.216100f, -0.140400f }	},
	{	{ 0.003422f, 0.186398f, -0.033684f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.857100f, -0.462400f, -0.227200f }	},
	{	{ 0.039857f, 0.262235f, -0.050590f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.857100f, -0.462400f, -0.227200f }	},
	{	{ 0.056243f, 0.262235f, 0.011237f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.857100f, -0.462400f, -0.227200f }	},
	{	{ 0.016218f, 0.186398f, 0.014595f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.857100f, -0.462400f, -0.227200f }	},
	{	{ 0.039857f, 0.262235f, -0.050590f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.702900f, -0.687600f, -0.182100f }	},
	{	{ 0.081376f, 0.302452f, -0.043596f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.702900f, -0.687600f, -0.182100f }	},
	{	{ 0.091344f, 0.300110f, 0.005120f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.702900f, -0.687600f, -0.182100f }	},
	{	{ 0.056243f, 0.262235f, 0.011237f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.702900f, -0.687600f, -0.182100f }	},
	{	{ 0.081376f, 0.302452f, -0.043596f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.511800f, -0.846700f, -0.145400f }	},
	{	{ 0.149559f, 0.341527f, -0.031159f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.511800f, -0.846700f, -0.145400f }	},
	{	{ 0.152193f, 0.340908f, -0.018285f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.511800f, -0.846700f, -0.145400f }	},
	{	{ 0.091344f, 0.300110f, 0.005120f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.511800f, -0.846700f, -0.145400f }	},
	{	{ 0.152193f, 0.340908f, -0.018285f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.380900f, -0.916500f, -0.122000f }	},
	{	{ 0.149559f, 0.341527f, -0.031159f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.380900f, -0.916500f, -0.122000f }	},
	{	{ 0.166053f, 0.347770f, -0.026561f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.380900f, -0.916500f, -0.122000f }	},
	{	{ -0.006456f, 0.077144f, 0.000799f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.257000f, -0.071300f, 0.963800f }	},
	{	{ -0.032763f, 0.169207f, 0.014595f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.257000f, -0.071300f, 0.963800f }	},
	{	{ -0.043641f, 0.167911f, 0.017432f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.257000f, -0.071300f, 0.963800f }	},
	{	{ -0.017566f, 0.076705f, 0.003697f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.257000f, -0.071300f, 0.963800f }	},
	{	{ -0.019967f, 0.169207f, -0.033684f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.221600f, -0.263900f, -0.938800f }	},
	{	{ -0.003081f, 0.077144f, -0.011934f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.221600f, -0.263900f, -0.938800f }	},
	{	{ -0.014187f, 0.076670f, -0.009037f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.221600f, -0.263900f, -0.938800f }	},
	{	{ -0.030775f, 0.167750f, -0.030866f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.221600f, -0.263900f, -0.938800f }	},
	{	{ -0.032763f, 0.169207f, 0.014595f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.223900f, 0.161800f, 0.961100f }	},
	{	{ -0.072788f, 0.245044f, 0.011237f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.223900f, 0.161800f, 0.961100f }	},
	{	{ -0.083136f, 0.242820f, 0.013938f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.223900f, 0.161800f, 0.961100f }	},
	{	{ -0.043641f, 0.167911f, 0.017432f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.223900f, 0.161800f, 0.961100f }	},
	{	{ -0.056402f, 0.245044f, -0.050590f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.187100f, -0.300700f, -0.935200f }	},
	{	{ -0.019967f, 0.169207f, -0.033684f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.187100f, -0.300700f, -0.935200f }	},
	{	{ -0.030775f, 0.167750f, -0.030866f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.187100f, -0.300700f, -0.935200f }	},
	{	{ -0.066519f, 0.242529f, -0.047947f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.187100f, -0.300700f, -0.935200f }	},
	{	{ -0.072788f, 0.245044f, 0.011237f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.159900f, 0.305100f, 0.938800f }	},
	{	{ -0.107889f, 0.282919f, 0.005120f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.159900f, 0.305100f, 0.938800f }	},
	{	{ -0.117233f, 0.279651f, 0.007558f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.159900f, 0.305100f, 0.938800f }	},
	{	{ -0.083136f, 0.242820f, 0.013938f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.159900f, 0.305100f, 0.938800f }	},
	{	{ -0.097922f, 0.285262f, -0.043596f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.230100f, -0.070300f, -0.970600f }	},
	{	{ -0.056402f, 0.245044f, -0.050590f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.230100f, -0.070300f, -0.970600f }	},
	{	{ -0.066519f, 0.242529f, -0.047947f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.230100f, -0.070300f, -0.970600f }	},
	{	{ -0.106754f, 0.281605f, -0.041300f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.230100f, -0.070300f, -0.970600f }	},
	{	{ -0.107889f, 0.282919f, 0.005120f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.000000f, 0.505900f, 0.862600f }	},
	{	{ -0.168738f, 0.323717f, -0.018285f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.000000f, 0.505900f, 0.862600f }	},
	{	{ -0.176504f, 0.319417f, -0.016284f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.000000f, 0.505900f, 0.862600f }	},
	{	{ -0.117233f, 0.279651f, 0.007558f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.000000f, 0.505900f, 0.862600f }	},
	{	{ -0.166104f, 0.324336f, -0.031159f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.216100f, -0.068900f, -0.973900f }	},
	{	{ -0.097922f, 0.285262f, -0.043596f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.216100f, -0.068900f, -0.973900f }	},
	{	{ -0.106754f, 0.281605f, -0.041300f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.216100f, -0.068900f, -0.973900f }	},
	{	{ -0.173304f, 0.319760f, -0.029316f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.216100f, -0.068900f, -0.973900f }	},
	{	{ -0.168738f, 0.323717f, -0.018285f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.194700f, 0.604700f, 0.772300f }	},
	{	{ -0.182598f, 0.330580f, -0.026561f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.194700f, 0.604700f, 0.772300f }	},
	{	{ -0.189016f, 0.325679f, -0.024934f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.194700f, 0.604700f, 0.772300f }	},
	{	{ -0.176504f, 0.319417f, -0.016284f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.194700f, 0.604700f, 0.772300f }	},
	{	{ -0.182598f, 0.330580f, -0.026561f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.260900f, 0.021500f, -0.965100f }	},
	{	{ -0.166104f, 0.324336f, -0.031159f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.260900f, 0.021500f, -0.965100f }	},
	{	{ -0.173304f, 0.319760f, -0.029316f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.260900f, 0.021500f, -0.965100f }	},
	{	{ -0.189016f, 0.325679f, -0.024934f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.260900f, 0.021500f, -0.965100f }	},
	{	{ -0.003081f, 0.002127f, -0.011934f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -1.000000f, 0.000000f }	},
	{	{ -0.006456f, 0.002127f, 0.000799f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -1.000000f, 0.000000f }	},
	{	{ -0.017596f, 0.002127f, 0.003705f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -1.000000f, 0.000000f }	},
	{	{ -0.014222f, 0.002127f, -0.009028f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -1.000000f, 0.000000f }	},
	{	{ -0.003081f, 0.077144f, -0.011934f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.252400f, 0.000000f, -0.967600f }	},
	{	{ -0.003081f, 0.002127f, -0.011934f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.252400f, 0.000000f, -0.967600f }	},
	{	{ -0.014222f, 0.002127f, -0.009028f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.252400f, 0.000000f, -0.967600f }	},
	{	{ -0.014187f, 0.076670f, -0.009037f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.252400f, 0.000000f, -0.967600f }	},
	{	{ -0.006456f, 0.002127f, 0.000799f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.252400f, -0.000000f, 0.967600f }	},
	{	{ -0.006456f, 0.077144f, 0.000799f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.252400f, -0.000000f, 0.967600f }	},
	{	{ -0.017566f, 0.076705f, 0.003697f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.252400f, -0.000000f, 0.967600f }	},
	{	{ -0.017596f, 0.002127f, 0.003705f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.252400f, -0.000000f, 0.967600f }	},
	{	{ 0.016218f, 0.186398f, 0.014595f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.273500f, -0.213600f, 0.937900f }	},
	{	{ 0.005278f, 0.187600f, 0.018037f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.273500f, -0.213600f, 0.937900f }	},
	{	{ -0.023357f, 0.094035f, 0.005103f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.273500f, -0.213600f, 0.937900f }	},
	{	{ -0.012251f, 0.093350f, 0.001685f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.273500f, -0.213600f, 0.937900f }	},
	{	{ -0.008296f, 0.093350f, -0.010879f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.068100f, -0.997400f, -0.021500f }	},
	{	{ -0.012251f, 0.093350f, 0.001685f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.068100f, -0.997400f, -0.021500f }	},
	{	{ -0.023357f, 0.094035f, 0.005103f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.068100f, -0.997400f, -0.021500f }	},
	{	{ -0.019401f, 0.094035f, -0.007462f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.068100f, -0.997400f, -0.021500f }	},
	{	{ 0.003422f, 0.186398f, -0.033684f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.306200f, -0.189200f, -0.933000f }	},
	{	{ -0.008296f, 0.093350f, -0.010879f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.306200f, -0.189200f, -0.933000f }	},
	{	{ -0.019401f, 0.094035f, -0.007462f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.306200f, -0.189200f, -0.933000f }	},
	{	{ -0.007525f, 0.187582f, -0.030243f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.306200f, -0.189200f, -0.933000f }	},
	{	{ 0.016218f, 0.186398f, 0.014595f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.284800f, -0.107700f, 0.952500f }	},
	{	{ 0.056243f, 0.262235f, 0.011237f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.284800f, -0.107700f, 0.952500f }	},
	{	{ 0.045838f, 0.264398f, 0.014557f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.284800f, -0.107700f, 0.952500f }	},
	{	{ 0.005278f, 0.187600f, 0.018037f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.284800f, -0.107700f, 0.952500f }	},
	{	{ 0.039857f, 0.262235f, -0.050590f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.309700f, -0.062000f, -0.948800f }	},
	{	{ 0.003422f, 0.186398f, -0.033684f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.309700f, -0.062000f, -0.948800f }	},
	{	{ -0.007525f, 0.187582f, -0.030243f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.309700f, -0.062000f, -0.948800f }	},
	{	{ 0.029327f, 0.264215f, -0.047228f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.309700f, -0.062000f, -0.948800f }	},
	{	{ 0.091344f, 0.300110f, 0.005120f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.277600f, -0.101300f, 0.955300f }	},
	{	{ 0.081947f, 0.303343f, 0.008127f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.277600f, -0.101300f, 0.955300f }	},
	{	{ 0.045838f, 0.264398f, 0.014557f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.277600f, -0.101300f, 0.955300f }	},
	{	{ 0.056243f, 0.262235f, 0.011237f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.277600f, -0.101300f, 0.955300f }	},
	{	{ 0.081376f, 0.302452f, -0.043596f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.202500f, 0.362000f, -0.909900f }	},
	{	{ 0.039857f, 0.262235f, -0.050590f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.202500f, 0.362000f, -0.909900f }	},
	{	{ 0.029327f, 0.264215f, -0.047228f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.202500f, 0.362000f, -0.909900f }	},
	{	{ 0.071661f, 0.305400f, -0.040492f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.202500f, 0.362000f, -0.909900f }	},
	{	{ 0.091344f, 0.300110f, 0.005120f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.325800f, 0.054400f, 0.943900f }	},
	{	{ 0.152193f, 0.340908f, -0.018285f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.325800f, 0.054400f, 0.943900f }	},
	{	{ 0.144046f, 0.345004f, -0.015659f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.325800f, 0.054400f, 0.943900f }	},
	{	{ 0.081947f, 0.303343f, 0.008127f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.325800f, 0.054400f, 0.943900f }	},
	{	{ 0.149559f, 0.341527f, -0.031159f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.107300f, 0.459300f, -0.881800f }	},
	{	{ 0.081376f, 0.302452f, -0.043596f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.107300f, 0.459300f, -0.881800f }	},
	{	{ 0.071661f, 0.305400f, -0.040492f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.107300f, 0.459300f, -0.881800f }	},
	{	{ 0.141180f, 0.345485f, -0.028463f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.107300f, 0.459300f, -0.881800f }	},
	{	{ 0.152193f, 0.340908f, -0.018285f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.410600f, 0.220700f, 0.884700f }	},
	{	{ 0.166053f, 0.347770f, -0.026561f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.410600f, 0.220700f, 0.884700f }	},
	{	{ 0.158831f, 0.352340f, -0.024217f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.410600f, 0.220700f, 0.884700f }	},
	{	{ 0.144046f, 0.345004f, -0.015659f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.410600f, 0.220700f, 0.884700f }	},
	{	{ 0.166053f, 0.347770f, -0.026561f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.016100f, 0.530400f, -0.847600f }	},
	{	{ 0.149559f, 0.341527f, -0.031159f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.016100f, 0.530400f, -0.847600f }	},
	{	{ 0.141180f, 0.345485f, -0.028463f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.016100f, 0.530400f, -0.847600f }	},
	{	{ 0.158831f, 0.352340f, -0.024217f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.016100f, 0.530400f, -0.847600f }	},
};
#define _Carrot_1_vertices_
#endif
#ifndef _Carrot_1_indices_
// Index Data follows: Sequential by mesh, Every Three Indices == One Triangle.
const unsigned int Carrot_1_indices[264] =
{
	 0, 1, 2,
	 3, 0, 2,
	 4, 5, 6,
	 7, 4, 6,
	 8, 9, 10,
	 11, 8, 10,
	 12, 13, 14,
	 15, 12, 14,
	 16, 17, 18,
	 19, 20, 21,
	 22, 19, 21,
	 23, 24, 25,
	 26, 23, 25,
	 27, 28, 29,
	 30, 27, 29,
	 31, 32, 33,
	 34, 31, 33,
	 35, 36, 37,
	 38, 35, 37,
	 39, 40, 41,
	 42, 43, 44,
	 45, 42, 44,
	 46, 47, 48,
	 49, 46, 48,
	 50, 51, 52,
	 53, 50, 52,
	 54, 55, 56,
	 57, 54, 56,
	 58, 59, 60,
	 61, 62, 63,
	 64, 61, 63,
	 65, 66, 67,
	 68, 65, 67,
	 69, 70, 71,
	 72, 69, 71,
	 73, 74, 75,
	 76, 73, 75,
	 77, 78, 79,
	 80, 77, 79,
	 81, 82, 83,
	 84, 85, 86,
	 87, 84, 86,
	 88, 89, 90,
	 91, 88, 90,
	 92, 93, 94,
	 95, 92, 94,
	 96, 97, 98,
	 99, 96, 98,
	 100, 101, 102,
	 103, 100, 102,
	 104, 105, 106,
	 107, 104, 106,
	 108, 109, 110,
	 111, 108, 110,
	 112, 113, 114,
	 115, 112, 114,
	 116, 117, 118,
	 119, 116, 118,
	 120, 121, 122,
	 123, 120, 122,
	 124, 125, 126,
	 127, 124, 126,
	 128, 129, 130,
	 131, 128, 130,
	 132, 133, 134,
	 135, 132, 134,
	 136, 137, 138,
	 139, 136, 138,
	 140, 141, 142,
	 143, 140, 142,
	 144, 145, 146,
	 147, 144, 146,
	 148, 149, 150,
	 151, 148, 150,
	 152, 153, 154,
	 155, 152, 154,
	 156, 157, 158,
	 159, 156, 158,
	 160, 161, 162,
	 163, 160, 162,
	 164, 165, 166,
	 167, 164, 166,
	 168, 169, 170,
	 171, 168, 170,
	 172, 173, 174,
	 175, 172, 174,
	 176, 177, 178,
	 179, 176, 178,
};
#define _Carrot_1_indices_
#endif
// Part of an OBJ_MATERIAL, the struct is 16 byte aligned so it is GPU register friendly.
#ifndef __OBJ_ATTRIBUTES__
typedef struct _OBJ_ATTRIBUTES_
{
	OBJ_VEC3    Kd; // diffuse reflectivity
	float	    d; // dissolve (transparency) 
	OBJ_VEC3    Ks; // specular reflectivity
	float       Ns; // specular exponent
	OBJ_VEC3    Ka; // ambient reflectivity
	float       sharpness; // local reflection map sharpness
	OBJ_VEC3    Tf; // transmission filter
	float       Ni; // optical density (index of refraction)
	OBJ_VEC3    Ke; // emissive reflectivity
	unsigned    illum; // illumination model
}OBJ_ATTRIBUTES;
#define __OBJ_ATTRIBUTES__
#endif
// This structure also has been made GPU register friendly so it can be transfered directly if desired.
// Note: Total struct size will vary depenedening on CPU processor architecture (string pointers).
#ifndef __OBJ_MATERIAL__
typedef struct _OBJ_MATERIAL_
{
	// The following items are typically used in a pixel/fragment shader, they are packed for GPU registers.
	OBJ_ATTRIBUTES attrib; // Surface shading characteristics & illumination model
	// All items below this line are not needed on the GPU and are generally only used during load time.
	const char* name; // the name of this material
	// If the model's materials contain any specific texture data it will be located below.
	const char* map_Kd; // diffuse texture
	const char* map_Ks; // specular texture
	const char* map_Ka; // ambient texture
	const char* map_Ke; // emissive texture
	const char* map_Ns; // specular exponent texture
	const char* map_d; // transparency texture
	const char* disp; // roughness map (displacement)
	const char* decal; // decal texture (lerps texture & material colors)
	const char* bump; // normal/bumpmap texture
	void* padding[2]; // 16 byte alignment on 32bit or 64bit
}OBJ_MATERIAL;
#define __OBJ_MATERIAL__
#endif
#ifndef _Carrot_1_materials_
// Material Data follows: pulled from a .mtl file of the same name if present.
const OBJ_MATERIAL Carrot_1_materials[1] =
{
	{
		{{ 0.185317f, 0.358380f, 0.101168f },
		1.000000f,
		{ 0.500000f, 0.500000f, 0.500000f },
		96.078430f,
		{ 1.000000f, 1.000000f, 1.000000f },
		60.000000f,
		{ 1.000000f, 1.000000f, 1.000000f },
		1.000000f,
		{ 0.000000f, 0.000000f, 0.000000f },
		2},
		"Green",
		"",
		"",
		"",
		"",
		"",
		"",
		"",
		"",
		"",
	},
};
#define _Carrot_1_materials_
#endif
/************************************************/
/*  This section contains the model's structure */
/************************************************/
#ifndef _Carrot_1_batches_
// Use this conveinence array to batch render all geometry by like material.
// Each entry corresponds to the same entry in the materials array above.
// The two numbers provided are the IndexCount and the IndexOffset into the indices array.
// If you need more fine grained control(ex: for transformations) use the OBJ_MESH data below.
const unsigned int Carrot_1_batches[1][2] =
{
	{ 264, 0 },
};
#define _Carrot_1_batches_
#endif
#ifndef __OBJ_MESH__
typedef struct _OBJ_MESH_
{
	const char* name;
	unsigned    indexCount;
	unsigned    indexOffset;
	unsigned    materialIndex;
}OBJ_MESH;
#define __OBJ_MESH__
#endif
#ifndef _Carrot_1_meshes_
// Mesh Data follows: Meshes are .obj groups sorted & split by material.
// Meshes are provided in sequential order, sorted by material first and name second.
const OBJ_MESH Carrot_1_meshes[1] =
{
	{
		"default",
		264,
		0,
		0,
	},
};
#define _Carrot_1_meshes_
#endif
