// "Flower_1.h" generated by "Obj2Header.exe" [Version 1.9d] Author: L.Norri Fullsail University.
// Data is converted to left-handed coordinate system and UV data is V flipped for Direct3D/Vulkan.
// The companion file "Flower_1.h2b" is a binary dump of this format(-padding) for more flexibility.
// Loading *.h2b: read version, sizes, handle strings(max len 260) by reading until null-terminated.
/***********************/
/*  Generator version  */
/***********************/
#ifndef _Flower_1_version_
const char Flower_1_version[4] = { '0','1','9','d' };
#define _Flower_1_version_
#endif
/************************************************/
/*  This section contains the model's size data */
/************************************************/
#ifndef _Flower_1_vertexcount_
const unsigned Flower_1_vertexcount = 164;
#define _Flower_1_vertexcount_
#endif
#ifndef _Flower_1_indexcount_
const unsigned Flower_1_indexcount = 240;
#define _Flower_1_indexcount_
#endif
#ifndef _Flower_1_materialcount_
const unsigned Flower_1_materialcount = 1; // can be used for batched draws
#define _Flower_1_materialcount_
#endif
#ifndef _Flower_1_meshcount_
const unsigned Flower_1_meshcount = 1;
#define _Flower_1_meshcount_
#endif
/************************************************/
/*  This section contains the raw data to load  */
/************************************************/
#ifndef __OBJ_VEC3__
typedef struct _OBJ_VEC3_
{
	float x,y,z; // 3D Coordinate.
}OBJ_VEC3;
#define __OBJ_VEC3__
#endif
#ifndef __OBJ_VERT__
typedef struct _OBJ_VERT_
{
	OBJ_VEC3 pos; // Left-handed +Z forward coordinate w not provided, assumed to be 1.
	OBJ_VEC3 uvw; // D3D/Vulkan style top left 0,0 coordinate.
	OBJ_VEC3 nrm; // Provided direct from obj file, may or may not be normalized.
}OBJ_VERT;
#define __OBJ_VERT__
#endif
#ifndef _Flower_1_vertices_
// Raw Vertex Data follows: Positions, Texture Coordinates and Normals.
const OBJ_VERT Flower_1_vertices[164] =
{
	{	{ -0.007298f, 0.036220f, -0.009544f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.945400f, -0.208000f, -0.250900f }	},
	{	{ -0.001379f, -0.000098f, -0.001755f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.945400f, -0.208000f, -0.250900f }	},
	{	{ -0.002585f, -0.000084f, 0.002789f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.945400f, -0.208000f, -0.250900f }	},
	{	{ -0.011889f, 0.036284f, 0.007691f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.945400f, -0.208000f, -0.250900f }	},
	{	{ -0.025983f, 0.066153f, 0.006444f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.876000f, -0.422600f, -0.232500f }	},
	{	{ -0.020053f, 0.066037f, -0.015640f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.876000f, -0.422600f, -0.232500f }	},
	{	{ -0.007298f, 0.036220f, -0.009544f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.876000f, -0.422600f, -0.232500f }	},
	{	{ -0.011889f, 0.036284f, 0.007691f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.876000f, -0.422600f, -0.232500f }	},
	{	{ -0.038150f, 0.080840f, 0.004167f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.738400f, -0.646500f, -0.191500f }	},
	{	{ -0.034411f, 0.081619f, -0.013268f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.738400f, -0.646500f, -0.191500f }	},
	{	{ -0.020053f, 0.066037f, -0.015640f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.738400f, -0.646500f, -0.191500f }	},
	{	{ -0.025983f, 0.066153f, 0.006444f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.738400f, -0.646500f, -0.191500f }	},
	{	{ -0.059301f, 0.096696f, -0.004341f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.552100f, -0.819100f, -0.156000f }	},
	{	{ -0.058159f, 0.096833f, -0.008991f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.552100f, -0.819100f, -0.156000f }	},
	{	{ -0.034411f, 0.081619f, -0.013268f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.552100f, -0.819100f, -0.156000f }	},
	{	{ -0.038150f, 0.080840f, 0.004167f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.552100f, -0.819100f, -0.156000f }	},
	{	{ -0.059301f, 0.096696f, -0.004341f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.415000f, -0.900700f, -0.128400f }	},
	{	{ -0.063766f, 0.099193f, -0.007428f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.415000f, -0.900700f, -0.128400f }	},
	{	{ -0.058159f, 0.096833f, -0.008991f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.415000f, -0.900700f, -0.128400f }	},
	{	{ 0.000999f, 0.044128f, -0.009322f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.970700f, 0.194700f, 0.141100f }	},
	{	{ -0.003240f, 0.006826f, -0.001193f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.970700f, 0.194700f, 0.141100f }	},
	{	{ -0.004651f, 0.006826f, 0.003291f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.970700f, 0.194700f, 0.141100f }	},
	{	{ 0.005567f, 0.044135f, 0.007906f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.970700f, 0.194700f, 0.141100f }	},
	{	{ 0.020041f, 0.074757f, 0.006665f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.875800f, 0.423200f, 0.232400f }	},
	{	{ 0.014149f, 0.074684f, -0.015383f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.875800f, 0.423200f, 0.232400f }	},
	{	{ 0.000999f, 0.044128f, -0.009322f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.875800f, 0.423200f, 0.232400f }	},
	{	{ 0.005567f, 0.044135f, 0.007906f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.875800f, 0.423200f, 0.232400f }	},
	{	{ 0.032926f, 0.090287f, 0.004370f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.738600f, 0.646400f, 0.191500f }	},
	{	{ 0.029256f, 0.091107f, -0.012980f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.738600f, 0.646400f, 0.191500f }	},
	{	{ 0.014149f, 0.074684f, -0.015383f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.738600f, 0.646400f, 0.191500f }	},
	{	{ 0.020041f, 0.074757f, 0.006665f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.738600f, 0.646400f, 0.191500f }	},
	{	{ 0.055086f, 0.106899f, -0.004118f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.553700f, 0.817900f, 0.156300f }	},
	{	{ 0.054063f, 0.107091f, -0.008687f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.553700f, 0.817900f, 0.156300f }	},
	{	{ 0.029256f, 0.091107f, -0.012980f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.553700f, 0.817900f, 0.156300f }	},
	{	{ 0.032926f, 0.090287f, 0.004370f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.553700f, 0.817900f, 0.156300f }	},
	{	{ 0.055086f, 0.106899f, -0.004118f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.421100f, 0.897300f, 0.132000f }	},
	{	{ 0.060362f, 0.109824f, -0.007172f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.421100f, 0.897300f, 0.132000f }	},
	{	{ 0.054063f, 0.107091f, -0.008687f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.421100f, 0.897300f, 0.132000f }	},
	{	{ 0.001380f, 0.000091f, 0.001755f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.945500f, 0.208200f, 0.250600f }	},
	{	{ 0.002584f, 0.000091f, -0.002789f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.945500f, 0.208200f, 0.250600f }	},
	{	{ -0.003442f, 0.036801f, -0.010550f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.945500f, 0.208200f, 0.250600f }	},
	{	{ -0.008008f, 0.036801f, 0.006678f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.945500f, 0.208200f, 0.250600f }	},
	{	{ -0.003442f, 0.036801f, -0.010550f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.875900f, 0.422900f, 0.232100f }	},
	{	{ -0.016443f, 0.067040f, -0.016583f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.875900f, 0.422900f, 0.232100f }	},
	{	{ -0.022291f, 0.067040f, 0.005480f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.875900f, 0.422900f, 0.232100f }	},
	{	{ -0.008008f, 0.036801f, 0.006678f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.875900f, 0.422900f, 0.232100f }	},
	{	{ -0.016443f, 0.067040f, -0.016583f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.738500f, 0.646500f, 0.191400f }	},
	{	{ -0.031259f, 0.083077f, -0.014087f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.738500f, 0.646500f, 0.191400f }	},
	{	{ -0.034816f, 0.082143f, 0.003297f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.738500f, 0.646500f, 0.191400f }	},
	{	{ -0.022291f, 0.067040f, 0.005480f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.738500f, 0.646500f, 0.191400f }	},
	{	{ -0.031259f, 0.083077f, -0.014087f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.552700f, 0.818400f, 0.157100f }	},
	{	{ -0.055590f, 0.098657f, -0.009649f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.552700f, 0.818400f, 0.157100f }	},
	{	{ -0.056530f, 0.098411f, -0.005055f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.552700f, 0.818400f, 0.157100f }	},
	{	{ -0.034816f, 0.082143f, 0.003297f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.552700f, 0.818400f, 0.157100f }	},
	{	{ -0.056530f, 0.098411f, -0.005055f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.417500f, 0.898800f, 0.133700f }	},
	{	{ -0.055590f, 0.098657f, -0.009649f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.417500f, 0.898800f, 0.133700f }	},
	{	{ -0.061476f, 0.101147f, -0.008008f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.417500f, 0.898800f, 0.133700f }	},
	{	{ -0.000688f, 0.006553f, 0.002071f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.970700f, -0.194300f, -0.141000f }	},
	{	{ 0.000723f, 0.006553f, -0.002412f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.970700f, -0.194300f, -0.141000f }	},
	{	{ 0.004905f, 0.043655f, -0.010550f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.970700f, -0.194300f, -0.141000f }	},
	{	{ 0.009471f, 0.043655f, 0.006678f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.970700f, -0.194300f, -0.141000f }	},
	{	{ 0.004905f, 0.043655f, -0.010550f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.875900f, -0.422900f, -0.232100f }	},
	{	{ 0.017907f, 0.073895f, -0.016583f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.875900f, -0.422900f, -0.232100f }	},
	{	{ 0.023754f, 0.073895f, 0.005480f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.875900f, -0.422900f, -0.232100f }	},
	{	{ 0.009471f, 0.043655f, 0.006678f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.875900f, -0.422900f, -0.232100f }	},
	{	{ 0.017907f, 0.073895f, -0.016583f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.738500f, -0.646500f, -0.191400f }	},
	{	{ 0.032723f, 0.089932f, -0.014087f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.738500f, -0.646500f, -0.191400f }	},
	{	{ 0.036279f, 0.088998f, 0.003297f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.738500f, -0.646500f, -0.191400f }	},
	{	{ 0.023754f, 0.073895f, 0.005480f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.738500f, -0.646500f, -0.191400f }	},
	{	{ 0.032723f, 0.089932f, -0.014087f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.552700f, -0.818400f, -0.157100f }	},
	{	{ 0.057053f, 0.105512f, -0.009649f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.552700f, -0.818400f, -0.157100f }	},
	{	{ 0.057993f, 0.105265f, -0.005055f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.552700f, -0.818400f, -0.157100f }	},
	{	{ 0.036279f, 0.088998f, 0.003297f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.552700f, -0.818400f, -0.157100f }	},
	{	{ 0.057993f, 0.105265f, -0.005055f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.417500f, -0.898800f, -0.133700f }	},
	{	{ 0.057053f, 0.105512f, -0.009649f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.417500f, -0.898800f, -0.133700f }	},
	{	{ 0.062939f, 0.108002f, -0.008008f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.417500f, -0.898800f, -0.133700f }	},
	{	{ 0.001380f, 0.000091f, 0.001755f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.257100f, -0.063900f, 0.964300f }	},
	{	{ -0.008008f, 0.036801f, 0.006678f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.257100f, -0.063900f, 0.964300f }	},
	{	{ -0.011889f, 0.036284f, 0.007691f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.257100f, -0.063900f, 0.964300f }	},
	{	{ -0.002585f, -0.000084f, 0.002789f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.257100f, -0.063900f, 0.964300f }	},
	{	{ -0.003442f, 0.036801f, -0.010550f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.223100f, -0.237800f, -0.945300f }	},
	{	{ 0.002584f, 0.000091f, -0.002789f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.223100f, -0.237800f, -0.945300f }	},
	{	{ -0.001379f, -0.000098f, -0.001755f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.223100f, -0.237800f, -0.945300f }	},
	{	{ -0.007298f, 0.036220f, -0.009544f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.223100f, -0.237800f, -0.945300f }	},
	{	{ -0.008008f, 0.036801f, 0.006678f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.224500f, 0.145200f, 0.963600f }	},
	{	{ -0.022291f, 0.067040f, 0.005480f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.224500f, 0.145200f, 0.963600f }	},
	{	{ -0.025983f, 0.066153f, 0.006444f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.224500f, 0.145200f, 0.963600f }	},
	{	{ -0.011889f, 0.036284f, 0.007691f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.224500f, 0.145200f, 0.963600f }	},
	{	{ -0.016443f, 0.067040f, -0.016583f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.188800f, -0.271500f, -0.943700f }	},
	{	{ -0.003442f, 0.036801f, -0.010550f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.188800f, -0.271500f, -0.943700f }	},
	{	{ -0.007298f, 0.036220f, -0.009544f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.188800f, -0.271500f, -0.943700f }	},
	{	{ -0.020053f, 0.066037f, -0.015640f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.188800f, -0.271500f, -0.943700f }	},
	{	{ -0.022291f, 0.067040f, 0.005480f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.161400f, 0.275600f, 0.947600f }	},
	{	{ -0.034816f, 0.082143f, 0.003297f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.161400f, 0.275600f, 0.947600f }	},
	{	{ -0.038150f, 0.080840f, 0.004167f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.161400f, 0.275600f, 0.947600f }	},
	{	{ -0.025983f, 0.066153f, 0.006444f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.161400f, 0.275600f, 0.947600f }	},
	{	{ -0.031259f, 0.083077f, -0.014087f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.230200f, -0.062900f, -0.971100f }	},
	{	{ -0.016443f, 0.067040f, -0.016583f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.230200f, -0.062900f, -0.971100f }	},
	{	{ -0.020053f, 0.066037f, -0.015640f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.230200f, -0.062900f, -0.971100f }	},
	{	{ -0.034411f, 0.081619f, -0.013268f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.230200f, -0.062900f, -0.971100f }	},
	{	{ -0.034816f, 0.082143f, 0.003297f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.000000f, 0.464700f, 0.885500f }	},
	{	{ -0.056530f, 0.098411f, -0.005055f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.000000f, 0.464700f, 0.885500f }	},
	{	{ -0.059301f, 0.096696f, -0.004341f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.000000f, 0.464700f, 0.885500f }	},
	{	{ -0.038150f, 0.080840f, 0.004167f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.000000f, 0.464700f, 0.885500f }	},
	{	{ -0.055590f, 0.098657f, -0.009649f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.216200f, -0.061700f, -0.974400f }	},
	{	{ -0.031259f, 0.083077f, -0.014087f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.216200f, -0.061700f, -0.974400f }	},
	{	{ -0.034411f, 0.081619f, -0.013268f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.216200f, -0.061700f, -0.974400f }	},
	{	{ -0.058159f, 0.096833f, -0.008991f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.216200f, -0.061700f, -0.974400f }	},
	{	{ -0.056530f, 0.098411f, -0.005055f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.202200f, 0.562000f, 0.802000f }	},
	{	{ -0.061476f, 0.101147f, -0.008008f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.202200f, 0.562000f, 0.802000f }	},
	{	{ -0.063766f, 0.099193f, -0.007428f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.202200f, 0.562000f, 0.802000f }	},
	{	{ -0.059301f, 0.096696f, -0.004341f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.202200f, 0.562000f, 0.802000f }	},
	{	{ -0.061476f, 0.101147f, -0.008008f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.261000f, 0.019200f, -0.965200f }	},
	{	{ -0.055590f, 0.098657f, -0.009649f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.261000f, 0.019200f, -0.965200f }	},
	{	{ -0.058159f, 0.096833f, -0.008991f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.261000f, 0.019200f, -0.965200f }	},
	{	{ -0.063766f, 0.099193f, -0.007428f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.261000f, 0.019200f, -0.965200f }	},
	{	{ 0.002584f, 0.000091f, -0.002789f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.049800f, -0.998700f, 0.014700f }	},
	{	{ 0.001380f, 0.000091f, 0.001755f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.049800f, -0.998700f, 0.014700f }	},
	{	{ -0.002585f, -0.000084f, 0.002789f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.049800f, -0.998700f, 0.014700f }	},
	{	{ -0.001379f, -0.000098f, -0.001755f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.049800f, -0.998700f, 0.014700f }	},
	{	{ 0.009471f, 0.043655f, 0.006678f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.274800f, -0.192000f, 0.942100f }	},
	{	{ 0.005567f, 0.044135f, 0.007906f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.274800f, -0.192000f, 0.942100f }	},
	{	{ -0.004651f, 0.006826f, 0.003291f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.274800f, -0.192000f, 0.942100f }	},
	{	{ -0.000688f, 0.006553f, 0.002071f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.274800f, -0.192000f, 0.942100f }	},
	{	{ 0.000723f, 0.006553f, -0.002412f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.076100f, -0.996800f, -0.024000f }	},
	{	{ -0.000688f, 0.006553f, 0.002071f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.076100f, -0.996800f, -0.024000f }	},
	{	{ -0.004651f, 0.006826f, 0.003291f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.076100f, -0.996800f, -0.024000f }	},
	{	{ -0.003240f, 0.006826f, -0.001193f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.076100f, -0.996800f, -0.024000f }	},
	{	{ 0.004905f, 0.043655f, -0.010550f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.307300f, -0.169900f, -0.936300f }	},
	{	{ 0.000723f, 0.006553f, -0.002412f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.307300f, -0.169900f, -0.936300f }	},
	{	{ -0.003240f, 0.006826f, -0.001193f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.307300f, -0.169900f, -0.936300f }	},
	{	{ 0.000999f, 0.044128f, -0.009322f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.307300f, -0.169900f, -0.936300f }	},
	{	{ 0.009471f, 0.043655f, 0.006678f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.285100f, -0.096500f, 0.953600f }	},
	{	{ 0.023754f, 0.073895f, 0.005480f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.285100f, -0.096500f, 0.953600f }	},
	{	{ 0.020041f, 0.074757f, 0.006665f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.285100f, -0.096500f, 0.953600f }	},
	{	{ 0.005567f, 0.044135f, 0.007906f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.285100f, -0.096500f, 0.953600f }	},
	{	{ 0.017907f, 0.073895f, -0.016583f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.309800f, -0.055500f, -0.949200f }	},
	{	{ 0.004905f, 0.043655f, -0.010550f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.309800f, -0.055500f, -0.949200f }	},
	{	{ 0.000999f, 0.044128f, -0.009322f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.309800f, -0.055500f, -0.949200f }	},
	{	{ 0.014149f, 0.074684f, -0.015383f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.309800f, -0.055500f, -0.949200f }	},
	{	{ 0.023754f, 0.073895f, 0.005480f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.277900f, -0.090800f, 0.956300f }	},
	{	{ 0.036279f, 0.088998f, 0.003297f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.277900f, -0.090800f, 0.956300f }	},
	{	{ 0.032926f, 0.090287f, 0.004370f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.277900f, -0.090800f, 0.956300f }	},
	{	{ 0.020041f, 0.074757f, 0.006665f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.277900f, -0.090800f, 0.956300f }	},
	{	{ 0.032723f, 0.089932f, -0.014087f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.205100f, 0.328300f, -0.922000f }	},
	{	{ 0.017907f, 0.073895f, -0.016583f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.205100f, 0.328300f, -0.922000f }	},
	{	{ 0.014149f, 0.074684f, -0.015383f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.205100f, 0.328300f, -0.922000f }	},
	{	{ 0.029256f, 0.091107f, -0.012980f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.205100f, 0.328300f, -0.922000f }	},
	{	{ 0.036279f, 0.088998f, 0.003297f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.325900f, 0.048700f, 0.944200f }	},
	{	{ 0.057993f, 0.105265f, -0.005055f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.325900f, 0.048700f, 0.944200f }	},
	{	{ 0.055086f, 0.106899f, -0.004118f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.325900f, 0.048700f, 0.944200f }	},
	{	{ 0.032926f, 0.090287f, 0.004370f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.325900f, 0.048700f, 0.944200f }	},
	{	{ 0.057053f, 0.105512f, -0.009649f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.109700f, 0.419900f, -0.900900f }	},
	{	{ 0.032723f, 0.089932f, -0.014087f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.109700f, 0.419900f, -0.900900f }	},
	{	{ 0.029256f, 0.091107f, -0.012980f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.109700f, 0.419900f, -0.900900f }	},
	{	{ 0.054063f, 0.107091f, -0.008687f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.109700f, 0.419900f, -0.900900f }	},
	{	{ 0.057993f, 0.105265f, -0.005055f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.412600f, 0.198400f, 0.889100f }	},
	{	{ 0.062939f, 0.108002f, -0.008008f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.412600f, 0.198400f, 0.889100f }	},
	{	{ 0.060362f, 0.109824f, -0.007172f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.412600f, 0.198400f, 0.889100f }	},
	{	{ 0.055086f, 0.106899f, -0.004118f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.412600f, 0.198400f, 0.889100f }	},
	{	{ 0.062939f, 0.108002f, -0.008008f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.016500f, 0.488500f, -0.872400f }	},
	{	{ 0.057053f, 0.105512f, -0.009649f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.016500f, 0.488500f, -0.872400f }	},
	{	{ 0.054063f, 0.107091f, -0.008687f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.016500f, 0.488500f, -0.872400f }	},
	{	{ 0.060362f, 0.109824f, -0.007172f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.016500f, 0.488500f, -0.872400f }	},
};
#define _Flower_1_vertices_
#endif
#ifndef _Flower_1_indices_
// Index Data follows: Sequential by mesh, Every Three Indices == One Triangle.
const unsigned int Flower_1_indices[240] =
{
	 0, 1, 2,
	 3, 0, 2,
	 4, 5, 6,
	 7, 4, 6,
	 8, 9, 10,
	 11, 8, 10,
	 12, 13, 14,
	 15, 12, 14,
	 16, 17, 18,
	 19, 20, 21,
	 22, 19, 21,
	 23, 24, 25,
	 26, 23, 25,
	 27, 28, 29,
	 30, 27, 29,
	 31, 32, 33,
	 34, 31, 33,
	 35, 36, 37,
	 38, 39, 40,
	 41, 38, 40,
	 42, 43, 44,
	 45, 42, 44,
	 46, 47, 48,
	 49, 46, 48,
	 50, 51, 52,
	 53, 50, 52,
	 54, 55, 56,
	 57, 58, 59,
	 60, 57, 59,
	 61, 62, 63,
	 64, 61, 63,
	 65, 66, 67,
	 68, 65, 67,
	 69, 70, 71,
	 72, 69, 71,
	 73, 74, 75,
	 76, 77, 78,
	 79, 76, 78,
	 80, 81, 82,
	 83, 80, 82,
	 84, 85, 86,
	 87, 84, 86,
	 88, 89, 90,
	 91, 88, 90,
	 92, 93, 94,
	 95, 92, 94,
	 96, 97, 98,
	 99, 96, 98,
	 100, 101, 102,
	 103, 100, 102,
	 104, 105, 106,
	 107, 104, 106,
	 108, 109, 110,
	 111, 108, 110,
	 112, 113, 114,
	 115, 112, 114,
	 116, 117, 118,
	 119, 116, 118,
	 120, 121, 122,
	 123, 120, 122,
	 124, 125, 126,
	 127, 124, 126,
	 128, 129, 130,
	 131, 128, 130,
	 132, 133, 134,
	 135, 132, 134,
	 136, 137, 138,
	 139, 136, 138,
	 140, 141, 142,
	 143, 140, 142,
	 144, 145, 146,
	 147, 144, 146,
	 148, 149, 150,
	 151, 148, 150,
	 152, 153, 154,
	 155, 152, 154,
	 156, 157, 158,
	 159, 156, 158,
	 160, 161, 162,
	 163, 160, 162,
};
#define _Flower_1_indices_
#endif
// Part of an OBJ_MATERIAL, the struct is 16 byte aligned so it is GPU register friendly.
#ifndef __OBJ_ATTRIBUTES__
typedef struct _OBJ_ATTRIBUTES_
{
	OBJ_VEC3    Kd; // diffuse reflectivity
	float	    d; // dissolve (transparency) 
	OBJ_VEC3    Ks; // specular reflectivity
	float       Ns; // specular exponent
	OBJ_VEC3    Ka; // ambient reflectivity
	float       sharpness; // local reflection map sharpness
	OBJ_VEC3    Tf; // transmission filter
	float       Ni; // optical density (index of refraction)
	OBJ_VEC3    Ke; // emissive reflectivity
	unsigned    illum; // illumination model
}OBJ_ATTRIBUTES;
#define __OBJ_ATTRIBUTES__
#endif
// This structure also has been made GPU register friendly so it can be transfered directly if desired.
// Note: Total struct size will vary depenedening on CPU processor architecture (string pointers).
#ifndef __OBJ_MATERIAL__
typedef struct _OBJ_MATERIAL_
{
	// The following items are typically used in a pixel/fragment shader, they are packed for GPU registers.
	OBJ_ATTRIBUTES attrib; // Surface shading characteristics & illumination model
	// All items below this line are not needed on the GPU and are generally only used during load time.
	const char* name; // the name of this material
	// If the model's materials contain any specific texture data it will be located below.
	const char* map_Kd; // diffuse texture
	const char* map_Ks; // specular texture
	const char* map_Ka; // ambient texture
	const char* map_Ke; // emissive texture
	const char* map_Ns; // specular exponent texture
	const char* map_d; // transparency texture
	const char* disp; // roughness map (displacement)
	const char* decal; // decal texture (lerps texture & material colors)
	const char* bump; // normal/bumpmap texture
	void* padding[2]; // 16 byte alignment on 32bit or 64bit
}OBJ_MATERIAL;
#define __OBJ_MATERIAL__
#endif
#ifndef _Flower_1_materials_
// Material Data follows: pulled from a .mtl file of the same name if present.
const OBJ_MATERIAL Flower_1_materials[1] =
{
	{
		{{ 0.069954f, 0.121857f, 0.047888f },
		1.000000f,
		{ 0.500000f, 0.500000f, 0.500000f },
		96.078430f,
		{ 1.000000f, 1.000000f, 1.000000f },
		60.000000f,
		{ 1.000000f, 1.000000f, 1.000000f },
		1.000000f,
		{ 0.000000f, 0.000000f, 0.000000f },
		2},
		"DarkGreen2",
		"",
		"",
		"",
		"",
		"",
		"",
		"",
		"",
		"",
	},
};
#define _Flower_1_materials_
#endif
/************************************************/
/*  This section contains the model's structure */
/************************************************/
#ifndef _Flower_1_batches_
// Use this conveinence array to batch render all geometry by like material.
// Each entry corresponds to the same entry in the materials array above.
// The two numbers provided are the IndexCount and the IndexOffset into the indices array.
// If you need more fine grained control(ex: for transformations) use the OBJ_MESH data below.
const unsigned int Flower_1_batches[1][2] =
{
	{ 240, 0 },
};
#define _Flower_1_batches_
#endif
#ifndef __OBJ_MESH__
typedef struct _OBJ_MESH_
{
	const char* name;
	unsigned    indexCount;
	unsigned    indexOffset;
	unsigned    materialIndex;
}OBJ_MESH;
#define __OBJ_MESH__
#endif
#ifndef _Flower_1_meshes_
// Mesh Data follows: Meshes are .obj groups sorted & split by material.
// Meshes are provided in sequential order, sorted by material first and name second.
const OBJ_MESH Flower_1_meshes[1] =
{
	{
		"default",
		240,
		0,
		0,
	},
};
#define _Flower_1_meshes_
#endif
